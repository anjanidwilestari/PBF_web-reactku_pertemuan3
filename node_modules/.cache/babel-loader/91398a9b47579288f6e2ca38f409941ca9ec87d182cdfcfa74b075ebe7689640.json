{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\web-reactku\\\\src\\\\container\\\\BlogPost.jsx\";\nimport React, { Component } from \"react\";\nimport Post from \"../component/BlogPost/Post\";\nimport './BlogPost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass BlogPost extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      // komponen state dari React untuk statefull component\n      listArtikel: [] // variabel array yang digunakan untuk menyimpan data API\n    };\n  }\n\n  componentDidMount() {\n    // komponen untuk mengecek ketika component telah di mount-ing maka panggil API\n    fetch('http://localhost:3001/posts') // alamat URL API yang ingin kita ambil datanya\n    .then(response => response.json()) // ubah response data dari URL API menjadi sebuah data json\n    .then(jsonHasilAmbilDariAPI => {\n      this.setState({\n        listArtikel: jsonHasilAmbilDariAPI\n      });\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-artikel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Daftar Artikel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), this.state.listArtikel.map(artikel => {\n        // looping dan masukkan untuk setiap data yang ada di listArtikel ke variabel artikel\n        return /*#__PURE__*/_jsxDEV(Post, {\n          judul: artikel.title,\n          isi: artikel.body\n        }, artikel.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 32\n        }, this); // mappingkan data json dari API sesuai dengan kategorinya\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default BlogPost;","map":{"version":3,"names":["React","Component","Post","jsxDEV","_jsxDEV","BlogPost","constructor","arguments","state","listArtikel","componentDidMount","fetch","then","response","json","jsonHasilAmbilDariAPI","setState","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","artikel","judul","title","isi","body","id"],"sources":["C:/react/web-reactku/src/container/BlogPost.jsx"],"sourcesContent":["import React, {Component} from \"react\";\r\nimport Post from \"../component/BlogPost/Post\";\r\nimport './BlogPost.css';\r\n\r\nclass BlogPost extends Component{\r\n    state = {               // komponen state dari React untuk statefull component\r\n        listArtikel: []     // variabel array yang digunakan untuk menyimpan data API\r\n    }\r\n\r\n    componentDidMount(){    // komponen untuk mengecek ketika component telah di mount-ing maka panggil API\r\n        fetch('http://localhost:3001/posts') // alamat URL API yang ingin kita ambil datanya\r\n            .then(response => response.json())  // ubah response data dari URL API menjadi sebuah data json\r\n            .then(jsonHasilAmbilDariAPI => {\r\n                this.setState({\r\n                    listArtikel:jsonHasilAmbilDariAPI\r\n                })\r\n            })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"post-artikel\">\r\n                <h2>Daftar Artikel</h2>\r\n                {\r\n                    this.state.listArtikel.map(artikel => {     // looping dan masukkan untuk setiap data yang ada di listArtikel ke variabel artikel\r\n                        return <Post key={artikel.id} judul={artikel.title} isi={artikel.body}/>     // mappingkan data json dari API sesuai dengan kategorinya\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BlogPost;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,SAASJ,SAAS;EAAAK,YAAA;IAAA,SAAAC,SAAA;IAAA,KAC5BC,KAAK,GAAG;MAAgB;MACpBC,WAAW,EAAE,EAAE,CAAK;IACxB,CAAC;EAAA;;EAEDC,iBAAiBA,CAAA,EAAE;IAAK;IACpBC,KAAK,CAAC,6BAA6B,CAAC,CAAC;IAAA,CAChCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CAAE;IAAA,CACnCF,IAAI,CAACG,qBAAqB,IAAI;MAC3B,IAAI,CAACC,QAAQ,CAAC;QACVP,WAAW,EAACM;MAChB,CAAC,CAAC;IACN,CAAC,CAAC;EACV;EAEAE,MAAMA,CAAA,EAAE;IACJ,oBACIb,OAAA;MAAKc,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzBf,OAAA;QAAAe,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,EAEnB,IAAI,CAACf,KAAK,CAACC,WAAW,CAACe,GAAG,CAACC,OAAO,IAAI;QAAM;QACxC,oBAAOrB,OAAA,CAACF,IAAI;UAAkBwB,KAAK,EAAED,OAAO,CAACE,KAAM;UAACC,GAAG,EAAEH,OAAO,CAACI;QAAK,GAApDJ,OAAO,CAACK,EAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAA4C,EAAK;MACjF,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEJ;EAEd;AACJ;AAEA,eAAelB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}