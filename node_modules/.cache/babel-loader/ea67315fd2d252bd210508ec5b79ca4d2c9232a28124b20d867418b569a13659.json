{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\pertemuan3\\\\web-reactku\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport HelloComponent from \"./component/HelloComponent\";\nimport LoginComponent from \"./component/LoginComponent\";\nimport \"./index.css\";\n// import App from './App';\n// import Image from './Image';\n// import Image from './Image';\n// import List from './List';\nimport reportWebVitals from \"./reportWebVitals\";\n\n// function HelloComponent() {\n//   return HelloComponent;\n// }\n\n// const HelloComponent = () => {\n//   return HelloComponent\n// }\n\n// class StateFullComponent extends React.Component{\n//   render(){\n//     return<p>StateFullComponent</p>\n//   }\n// }\n\n// class Test extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { hello: \"World!\" };\n//   }\n\n//   componentWillMount() {\n//     console.log(\"componentWillMount()\");\n//   }\n\n//   componentDidMount() {\n//     console.log(\"componentDidMount()\");\n//   }\n\n//   changeState() {\n//     this.setState({ hello: \"Geek!\" });\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <h1>GeeksForGeeks.org, Hello{this.state.hello}</h1>\n//         <h2>\n//           <a onClick={this.changeState.bind(this)}>Press Here!</a>\n//         </h2>\n//       </div>);\n//   }\n\n//   shouldComponentUpdate(nextProps, nextState) {\n//     console.log(\"shouldComponentUpdate()\");\n//     return true;\n//   }\n\n//   componentWillUpdate() {\n//     console.log(\"componentWillUpdate()\");\n//   }\n\n//   componentDidUpdate() {\n//     console.log(\"componentDidUpdate()\");\n//   }\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(LoginComponent, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 71,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","HelloComponent","LoginComponent","reportWebVitals","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/react/pertemuan3/web-reactku/src/index.js"],"sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport HelloComponent from \"./component/HelloComponent\";\r\nimport LoginComponent from \"./component/LoginComponent\";\r\nimport \"./index.css\";\r\n// import App from './App';\r\n// import Image from './Image';\r\n// import Image from './Image';\r\n// import List from './List';\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\n// function HelloComponent() {\r\n//   return HelloComponent;\r\n// }\r\n\r\n// const HelloComponent = () => {\r\n//   return HelloComponent\r\n// }\r\n\r\n// class StateFullComponent extends React.Component{\r\n//   render(){\r\n//     return<p>StateFullComponent</p>\r\n//   }\r\n// }\r\n\r\n// class Test extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = { hello: \"World!\" };\r\n//   }\r\n\r\n//   componentWillMount() {\r\n//     console.log(\"componentWillMount()\");\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     console.log(\"componentDidMount()\");\r\n//   }\r\n\r\n//   changeState() {\r\n//     this.setState({ hello: \"Geek!\" });\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <h1>GeeksForGeeks.org, Hello{this.state.hello}</h1>\r\n//         <h2>\r\n//           <a onClick={this.changeState.bind(this)}>Press Here!</a>\r\n//         </h2>\r\n//       </div>);\r\n//   }\r\n\r\n//   shouldComponentUpdate(nextProps, nextState) {\r\n//     console.log(\"shouldComponentUpdate()\");\r\n//     return true;\r\n//   }\r\n\r\n//   componentWillUpdate() {\r\n//     console.log(\"componentWillUpdate()\");\r\n//   }\r\n\r\n//   componentDidUpdate() {\r\n//     console.log(\"componentDidUpdate()\");\r\n//   }\r\n// }\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <LoginComponent />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,cAAc,MAAM,4BAA4B;AACvD,OAAOC,cAAc,MAAM,4BAA4B;AACvD,OAAO,aAAa;AACpB;AACA;AACA;AACA;AACA,OAAOC,eAAe,MAAM,mBAAmB;;AAE/C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,IAAI,GAAGN,QAAQ,CAACO,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAEjEH,IAAI,CAACI,MAAM,eACTL,OAAA,CAACN,KAAK,CAACY,UAAU;EAAAC,QAAA,eACfP,OAAA,CAACH,cAAc;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAG;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QACD,CACpB;;AAED;AACA;AACA;AACAb,eAAe,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}